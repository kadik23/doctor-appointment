generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Doctor {
  id      String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  password   String 
  fullname   String?
  phone     String?
  biography   String?
  gender String?
  rating    Int?
  imageProfile String?
  specializationIDs String[]   @db.ObjectId
  specializations Specialization[] @relation(fields: [specializationIDs], references: [id])
  appointments Appointment[]
  schedule Schedule[]
  @@map("doctors")
}

model Specialization {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String  @unique
  description String
  doctorIDs String[]  @db.ObjectId
  doctors Doctor[] @relation(fields: [doctorIDs], references: [id])
  @@map("specializations")
}

model Patient {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  fullname  String
  gender  String
  age  String?
  phone  String
  appointments Appointment[]
  @@map("patients")
}


model Appointment {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  patient_id  String 
  doctor_id String 
  date  String
  time  String
  number  String
  status   String @default("UNDONEStatus")
  doctor   Doctor @relation(fields: [doctor_id], references: [id])
  patient   Patient @relation(fields: [patient_id], references: [id])
  @@map("appointments")
}

model Schedule {
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  doctor_id String
  date  String
  day String?
  start_time  String
  end_time  String
  doctor Doctor @relation(fields: [doctor_id], references: [id])
  available_slots Available_slots[]
  is_available_day String @default("true")
  @@map("schedules")
}

type Available_slots{
    start_at String
    end_at String
}


